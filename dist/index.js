(()=>{"use strict";class t{board;emptyTile;previousState;cost;heuristic;totalCost;constructor(t,e,s,n=0,o=0,i=0){this.board=t,this.emptyTile=e,this.previousState=s,this.cost=n,this.heuristic=o,this.totalCost=i}stateToString(){return this.board.sort(((t,e)=>t.row-e.row||t.column-e.column)).map((t=>t.value)).join("")}static stringToState(e){const s=e.split("").map(((t,e)=>({value:+t,row:Math.floor(e/3)+1,column:e%3+1}))),n=s.find((t=>0==t.value));return new t(s,n)}}class e{isSolvable(t){let e=0;for(let s=0;s<8;s++)for(let n=s+1;n<9;n++)"0"!=t[s]&&"0"!=t[n]&&t[s]>t[n]&&e++;return e%2==0}calculateManhattanHeuristic(t){if(0==t.value)return 0;const e=Math.floor((t.value-1)/3)+1,s=(t.value-1)%3+1;return Math.abs(t.row-e)+Math.abs(t.column-s)}calculateTotalHeuristic(t){let e=0;return t.board.forEach((t=>{e+=this.calculateManhattanHeuristic(t)})),e}getAvailableStates(e){const s=[],n=[{row:-1,column:0},{row:1,column:0},{row:0,column:-1},{row:0,column:1}];for(const o of n){const n=e.emptyTile.row+o.row,i=e.emptyTile.column+o.column;if(n>=1&&n<=3&&i>=1&&i<=3){const o=e.board.map((t=>Object.assign({},t))),l=o.find((t=>t.row==n&&t.column==i));l.row=e.emptyTile.row,l.column=e.emptyTile.column,o.find((t=>0==t.value)).row=n,o.find((t=>0==t.value)).column=i;const a=o.find((t=>0==t.value)),r=new t(o,a,e,e.cost+1);r.heuristic=this.calculateTotalHeuristic(r),r.totalCost=r.cost+r.heuristic,s.push(r)}}return s}}class s{items=[];enqueue(t,e){this.items.push({value:t,priority:e}),this.items.sort(((t,e)=>t.priority-e.priority))}dequeue(){return this.items.shift()?.value}isEmpty(){return 0==this.items.length}}class n extends e{solve(t){const e=new s,n=new Set;let o=0;for(e.enqueue(t,0);!e.isEmpty();){o++;const t=e.dequeue();if("123456780"==t.stateToString())return[t,o];n.add(t.stateToString());const s=this.getAvailableStates(t);for(const t of s)n.has(t.stateToString())||e.enqueue(t,t.totalCost)}return[null,o]}}class o extends e{counter=1;solve(t){return this.counter=1,[this.RBFS(t,1/0)[0],this.counter]}RBFS(t,e){if("123456780"==t.stateToString())return[t,t.totalCost];const s=this.getAvailableStates(t).map((e=>({state:e,value:Math.max(e.totalCost,t.totalCost)})));for(;;){this.counter++,s.sort(((t,e)=>t.value-e.value));const t=s[0];if(t.value>e)return[null,t.value];const n=s[1],o=this.RBFS(t.state,Math.min(e,n.value));if(t.value=o[1]||1/0,null!=o[0])return o}}}class i{static message="";static type="";static messageElement=document.getElementsByClassName("message")[0];static create(t,e){this.message=t,this.type=e,this.clear();const s=document.createElement("div");s.classList.add("message__text");const n=document.createElement("h3");n.innerText=this.type.charAt(0).toUpperCase()+this.type.slice(1)+"!",n.classList.add("message__title");const o=document.createElement("p");o.innerText=this.message,o.classList.add("message__info"),s.appendChild(n),s.appendChild(o);const i=document.createElement("img");i.src="assets/"+this.type+".svg",i.classList.add("message__icon"),this.messageElement.classList.add("message_"+this.type),this.messageElement.appendChild(i),this.messageElement.appendChild(s)}static clear(){this.messageElement.setAttribute("class","message"),this.messageElement.innerHTML=""}}class l{boardElement;boardInput;boardButton;generateButton;radioButton;solveButton;result;tableElement;complexityElement;nextButton;previousButton;resetButton;animateButton;stopButton;downloadButton;puzzleSolver;defaultBoard;solutionIndex=0;animationInterval=null;constructor(){this.boardElement=document.getElementsByClassName("tile"),this.boardInput=document.getElementsByClassName("boardInput")[0],this.boardButton=document.getElementsByClassName("boardButton")[0],this.generateButton=document.getElementsByClassName("generateButton")[0],this.radioButton=document.getElementsByClassName("radioButton"),this.solveButton=document.getElementsByClassName("solveButton")[0],this.result=document.getElementsByClassName("result")[0],this.tableElement=document.getElementsByClassName("table")[0],this.complexityElement=document.getElementsByClassName("complexity")[0],this.nextButton=document.getElementsByClassName("nextButton")[0],this.previousButton=document.getElementsByClassName("previousButton")[0],this.resetButton=document.getElementsByClassName("resetButton")[0],this.animateButton=document.getElementsByClassName("animateButton")[0],this.stopButton=document.getElementsByClassName("stopButton")[0],this.downloadButton=document.getElementsByClassName("downloadButton")[0],this.puzzleSolver=new n,this.defaultBoard=t.stringToState("012345678"),this.boardButton.addEventListener("click",(()=>this.onBoardButtonClick(this.boardInput.value))),this.boardInput.addEventListener("input",(()=>this.onBoardInputType(this.boardInput.value))),this.generateButton.addEventListener("click",(()=>this.generateBoard()));for(let t=0;t<this.radioButton.length;t++)this.radioButton[t].addEventListener("change",(()=>this.onMethodSelectChange(this.radioButton[t].value)));this.solveButton.addEventListener("click",(()=>this.solve())),this.nextButton.addEventListener("click",(()=>this.increaseSolutionIndex(!0))),this.previousButton.addEventListener("click",(()=>this.decreaseSolutionIndex())),this.resetButton.addEventListener("click",(()=>this.resetSolutionIndex())),this.animateButton.addEventListener("click",(()=>this.onAnimateButtonClick())),this.stopButton.addEventListener("click",(()=>this.onStopButtonClick())),this.stopButton.style.display="none"}drawBoard(t=this.defaultBoard){t.board.forEach((t=>{const e=[...this.boardElement].find((e=>+e.dataset.value==t.value));e.dataset.row=t.row.toString(),e.dataset.column=t.column.toString()}))}onBoardInputType(t){let e=!0;if(0!=t.length&&(9!=t.length?(e=!1,i.create("The board must contain 9 digits.","error")):t.match(/[0-8]{9}/)?new Set(t).size!=t.length&&(e=!1,i.create("The board must contain unique digits.","error")):(e=!1,i.create("The board must contain only digits from 0 to 8.","error"))),!e)return this.solveButton.disabled=!0,void(this.boardButton.disabled=!0);this.puzzleSolver.isSolvable(t)?(this.solveButton.disabled=!1,i.clear()):(this.solveButton.disabled=!0,i.create("This board is unsolvable.","warning")),this.boardButton.disabled=!1}onBoardButtonClick(e){this.onStopButtonClick();const s=e.length?t.stringToState(e):this.defaultBoard;this.drawBoard(s)}generateBoard(){const e=Array.from({length:9},((t,e)=>e));let s="";for(let t=0;t<9;t++){const t=Math.floor(Math.random()*e.length);s+=e.splice(t,1)[0]}this.onStopButtonClick(),this.boardInput.value=s,this.drawBoard(t.stringToState(s)),this.puzzleSolver.isSolvable(s)?(this.solveButton.disabled=!1,i.clear()):(this.solveButton.disabled=!0,i.create("This board is unsolvable.","warning"))}onMethodSelectChange(t){"A*"===t?this.puzzleSolver=new n:"RBFS"===t&&(this.puzzleSolver=new o)}solve(){const e=this.boardInput.value.length?t.stringToState(this.boardInput.value):this.defaultBoard;this.tableElement.innerHTML="",this.result.classList.add("result_loading"),this.solveButton.disabled=!0,this.onStopButtonClick(),setTimeout((()=>{const[t,s]=this.puzzleSolver.solve(e);this.solveButton.disabled=!1,this.result.classList.remove("result_loading"),t&&(this.complexityElement.innerText="Nodes traversed: "+s,this.result.classList.add("result_visible"),i.create("A solution has been found.","success"),this.generateTable(this.unpackState(t)),this.drawBoard(t),this.tableElement.children[this.solutionIndex].scrollIntoView({block:"center",behavior:"smooth"}),this.tableElement.children[this.solutionIndex].children[1].classList.add("table__button_active"))}),100)}unpackState(t){const e=[];for(;t;)e.unshift(t.stateToString()),t=t.previousState;return e}increaseSolutionIndex(e){this.tableElement.children[this.solutionIndex++].children[1].classList.remove("table__button_active"),this.tableElement.children[this.solutionIndex].children[1].classList.add("table__button_active"),this.tableElement.children[this.solutionIndex].scrollIntoView({block:"center",behavior:"smooth"}),this.drawBoard(t.stringToState(this.tableElement.children[this.solutionIndex].children[1].textContent)),this.previousButton.disabled=!1,this.solutionIndex==this.tableElement.children.length-1&&(this.nextButton.disabled=!0),e&&this.onStopButtonClick()}decreaseSolutionIndex(){this.tableElement.children[this.solutionIndex--].children[1].classList.remove("table__button_active"),this.tableElement.children[this.solutionIndex].children[1].classList.add("table__button_active"),this.tableElement.children[this.solutionIndex].scrollIntoView({block:"center",behavior:"smooth"}),this.drawBoard(t.stringToState(this.tableElement.children[this.solutionIndex].children[1].textContent)),this.nextButton.disabled=!1,0==this.solutionIndex&&(this.previousButton.disabled=!0),this.onStopButtonClick()}resetSolutionIndex(){this.tableElement.children[this.solutionIndex].children[1].classList.remove("table__button_active"),this.solutionIndex=0,this.tableElement.children[this.solutionIndex].children[1].classList.add("table__button_active"),this.tableElement.children[this.solutionIndex].scrollIntoView({block:"center",behavior:"smooth"}),this.drawBoard(t.stringToState(this.tableElement.children[this.solutionIndex].children[1].textContent)),this.previousButton.disabled=!0,this.nextButton.disabled=this.tableElement.children.length<=1,this.onStopButtonClick()}onTableButtonClick(e,s){this.tableElement.children[this.solutionIndex].children[1].classList.remove("table__button_active"),this.solutionIndex=s,this.tableElement.children[this.solutionIndex].children[1].classList.add("table__button_active"),this.tableElement.children[this.solutionIndex].scrollIntoView({block:"center",behavior:"smooth"}),this.drawBoard(t.stringToState(e)),this.nextButton.disabled=!1,this.previousButton.disabled=!1,0==this.solutionIndex&&(this.previousButton.disabled=!0),this.solutionIndex==this.tableElement.children.length-1&&(this.nextButton.disabled=!0),this.onStopButtonClick()}onAnimateButtonClick(){this.tableElement.children.length>1&&(this.animationInterval||(this.resetSolutionIndex(),this.animateButton.style.display="none",this.stopButton.style.display="flex",this.animationInterval=setInterval((()=>{this.increaseSolutionIndex(!1),this.solutionIndex==this.tableElement.children.length-1&&this.onStopButtonClick()}),1e3)))}onStopButtonClick(){this.animationInterval&&(clearInterval(this.animationInterval),this.animationInterval=null,this.animateButton.style.display="flex",this.stopButton.style.display="none")}generateTable(t){this.tableElement.innerHTML="",this.solutionIndex=t.length-1;for(let e=0;e<t.length;e++){let s=document.createElement("span");s.classList.add("table__index"),s.innerText=e+1+".";let n=document.createElement("button");n.classList.add("table__button"),n.innerText=t[e],n.addEventListener("click",(()=>this.onTableButtonClick(t[e],e)));let o=document.createElement("div");o.classList.add("table__row"),o.appendChild(s),o.appendChild(n),this.tableElement.appendChild(o)}this.downloadButton.onclick=()=>this.dowloadSolution(t),this.nextButton.disabled=!0,this.previousButton.disabled=this.tableElement.children.length<=1}dowloadSolution(t){const e=document.createElement("a"),s=t.map(((t,e)=>e+1+". "+t)).join("\n");e.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(s)),e.setAttribute("download","solution_"+t[0]+".txt"),e.style.display="none",document.body.appendChild(e),e.click(),document.body.removeChild(e)}}document.addEventListener("DOMContentLoaded",(()=>{(new l).drawBoard()}))})();